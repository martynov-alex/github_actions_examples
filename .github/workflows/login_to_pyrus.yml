name: Login to Pyrus

on:
  workflow_call:
    # Выходные данные
    outputs:
      # Токен для авторизации
      TOKEN:
        value: ${{ jobs.login_to_pyrus.outputs.TOKEN }}
    # Креды Pyrus бота, который будет создавать задачи
    secrets:
      LOGIN:
        required: true
      SECURITY_KEY:
        required: true

jobs:
  login_to_pyrus:
    name: Authorization with receiving a token
    runs-on: ubuntu-latest
    outputs:
      TOKEN: ${{ steps.login.outputs.TOKEN }}
    env:
      LOGIN: ${{ secrets.LOGIN }}
      SECURITY_KEY: ${{ secrets.SECURITY_KEY }}
    steps:
      - id: login
        run: |
          # Authorization with receiving a token
          response=$(curl -X POST \
          https://api.pyrus.com/v4/auth \
          -H 'Content-Type: application/json' \
          -d '{
            "login": "'"$LOGIN"'",
            "security_key": "'"$SECURITY_KEY"'"
            }'
          )

          # Check for the absence of 'access_token' field in the response
          if ! echo "$response" | jq -e '.access_token' > /dev/null; then
            echo "Error in API request. Response: $response"
            exit 1
          else
            token=$(echo "$response" | jq -r '.access_token')
            echo "TOKEN=$token" >> $GITHUB_OUTPUT
            echo "Token received successfully."
          fi

